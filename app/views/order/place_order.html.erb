<!--

[{:national_id=>"P129500000229", :full_name=>"Mevis Kadammanja", :sex=>"Female", :age=>"51",
:date_of_birth=>"27/Oct/1963", :first_name=>"Mevis", :last_name=>"Kadammanja", :middle_name=>"N/A",
:home_village=>nil, :home_ta=>"TA Malengachanzi", :home_district=>"Nkhotakota ", :current_village=>"Area 25a Houses",
:current_ta=>nil, :current_district=>nil, :current_residence=>"Nsungwi market"}]

-->

<% if @patient.blank? %>

    <div style="width: 100%; text-align: center; margin-top: 15%; font-size: 28px;">
      <i><b>No Match Found!</b></i>
    </div>

<% else %>

    <%

       age = nil

       dob = @patient[:date_of_birth].to_date rescue nil

       if !dob.blank?

         days = (Date.today - dob).to_i

         if days < 30 # days

           age = "#{days} days"

         elsif days >= 30 and days <= 90 # weeks

           age = "#{days / 7} weeks"

         elsif days > 90 and days <= 720 # months

           age = "#{days / 30} months"

         else # years

           age = "#{days / 365}"

         end

       end

    %>

    <table width="100%" style="font-size: 20px; margin-left: 10px;" cellpadding="2">
      <tr>
        <td style="color: #23538a; font-size: 18px; font-weight: bold;" align="right">
          N<span style="font-size: 14px;">AME</span>
        </td>
        <td style="color: #23538a;">
          :
        </td>
        <td colspan="4">
          <%= @patient[:full_name] rescue nil %>
        </td>
      </tr>
      <tr>
        <td style="color: #23538a; font-size: 18px; font-weight: bold;" align="right">
          N<span style="font-size: 14px;">ATIONAL ID</span>
        </td>
        <td style="color: #23538a;">
          :
        </td>
        <td colspan="4">
          <%= @patient[:national_id] rescue nil %>
        </td>
      </tr>
      <tr>
        <td style="color: #23538a; font-size: 18px; font-weight: bold;" align="right">
          G<span style="font-size: 14px;">ENDER</span>
        </td>
        <td style="color: #23538a;">
          :
        </td>
        <td>
          <%= @patient[:sex] rescue nil %>
        </td>
        <td style="color: #23538a; font-size: 18px; font-weight: bold;" align="right">
          A<span style="font-size: 14px;">GE</span>
        </td>
        <td style="color: #23538a;">
          :
        </td>
        <td>
          <%= age %> <i>(<%= @patient[:date_of_birth] rescue nil %>)</i>
        </td>
      </tr>
      <tr>
        <td style="color: #23538a; font-size: 18px; font-weight: bold;" align="right">
          A<span style="font-size: 14px;">DDRESS</span>
        </td>
        <td style="color: #23538a;">
          :
        </td>
        <td colspan="4">
          <%= @patient[:current_residence] rescue nil %><%= !@patient[:current_village].blank? ? ", " : "" %>
          <%= @patient[:current_village] rescue nil %><%= !@patient[:current_ta].blank? ? ", " : "" %>
          <%= @patient[:current_ta] rescue nil %><%= !@patient[:current_district].blank? ? ", " : "" %>
          <%= @patient[:current_district] rescue nil %>
        </td>
      </tr>
      <tr>
        <td colspan="6">
          <div id="frame" style="height: 380px; width: 96%; overflow: auto; border-top: 1px solid #23538a; margin: auto;">
            <table width="90%" style="margin: auto; margin-top: 10px; " cellspacing="0" cellpadding="10">
              <tr>
                <th style="border-bottom: 2px solid #333; color: #333;">
                  Specimen Type
                </th>
              </tr>
              <tr>
                <td style="border-bottom: 1px dotted #ccc;">
                  <div id="specimens" style="width: 100%; height: 300px; overflow: auto;">

                  </div>
                </td>
              </tr>
            </table>
          </div>
        </td>
      </tr>
      <tr>
        <td colspan="6" align="center">
          <table style="margin-left: 40px;">
            <tr>
              <td>
                <button id="selected" class="button_gray" style="cursor: pointer;">Confirm Orders</button>
              </td>
              <td style="vertical-align: middle;">
                <div id="count" style="border-radius: 25px; border: 1px solid green; padding: 10px; color: green;
                        font-size: 18px; width: 25px; height: 25px; vertical-align: middle; text-align: center;">0
                </div>
              </td>
            </tr>
          </table>
        </td>
      </tr>
    </table>

<% end %>

<script>

    var associations = {};
    var identifiers = {};
    var shortnames = {};
    var codes = {};
    var groups = {};
    var containers = {};
    var volumes = {};
    var units = {};

    var liSpecSelect, liTestSelect;

    var selectedSample = ("<%= @specimen %>".trim().length > 0 ? "<%= @specimen %>" : null);
    var selectedTest = ("<%= @test_name %>".trim().length > 0 ? "<%= @test_name %>" : null);
    var selectedOrderTests = [];
    var selectedTestSpecimen = ("<%= @specimen %>".trim().length > 0 ? "<%= @specimen %>" : null);

    var selectedTests = {};

    var currentOrders = {};

    var drawingSamples = false;

    var currentPriority = null;

    var selectedOrder = null;

    var selectedTestPriority = "R";

    var preSelectedSpecimen = "<%= @specimen %>";

    var preSelectedTest = "<%= @test_name %>";

    var preSelectedTestCode = "<%= @test_code %>";

    var preSelectAccessionNumber = "<%= @accession_number %>";

    var preSelectedState = "<%= @state %>";

    var containerTypes = {
        "EDTA": purpletop,
        "Sterile Container": sterile6,
        "Fluoride Oxalate": graytop,
        "Slide": slide,
        "DBS": dbs,
        "BD Bactec Adult Bottle": blood1,
        "BD Bactec Paed Bottle": blood2,
        "Swab": swabs,
        "Plain Tube": lab_16
    }

    function renameBtn() {

        if (__$("btnLogout")) {

            __$("btnLogout").innerHTML = "Cancel";
            __$("btnLogout").setAttribute("onClick", "showSpinner(); window.location='/'")
        } else {

            setTimeout(function(){renameBtn()}, 100);

        }

    }

    function ajaxTasks() {

        showSpinner();

        var url = "/catalog";

        var httpRequest = new XMLHttpRequest();
        httpRequest.onreadystatechange = function () {
            handleTasks(httpRequest);
        };
        try {
            httpRequest.open('GET', url, true);
            httpRequest.send(null);
        } catch (e) {
        }
    }

    function handleTasks(aXMLHttpRequest) {
        if (!aXMLHttpRequest) return;

        if (aXMLHttpRequest.readyState == 4 && (aXMLHttpRequest.status == 200 ||
                aXMLHttpRequest.status == 304)) {

            var result = JSON.parse(aXMLHttpRequest.responseText);

            associations = result["associations"];

            identifiers = result["identifiers"];

            shortnames = result["shortnames"];

            codes = result["codes"];

            groups = result["groups"];

            containers = result["containers"];

            volumes = result["volumes"];

            units = result["units"];

            loadSpecimens();

        }
    }

    function loadSpecimens() {

        if (__$("specimens")) {

            __$("specimens").innerHTML = "";

            var ul = document.createElement("ul");
            ul.id = "ulSpecimens";
            ul.style.listStyle = "none";
            ul.style.paddingLeft = "0px";

            __$("specimens").appendChild(ul);

            var keys = Object.keys(associations).sort();

            for (var i = 0; i < keys.length; i++) {

                var key = keys[i];

                if (preSelectedSpecimen.trim().length > 0 && preSelectedSpecimen.trim().toLowerCase() != key.trim().toLowerCase()) {

                    continue;

                }

                var li = document.createElement("li");
                li.innerHTML = key + (preSelectedSpecimen.trim().toLowerCase() == key.trim().toLowerCase() ? "<i style='float: right; color: red;'>(Pre-selected)</i>" : "");
                li.style.padding = "10px";
                li.style.cursor = "pointer";
                li.style.margin = "1px";
                li.setAttribute("specimen", key);

                if (i % 2 > 0) {

                    li.style.backgroundColor = "#eee";

                    li.setAttribute("tag", "odd");

                } else {

                    li.style.borderTop = "1px dotted #ccc";

                    li.style.borderBottom = "1px dotted #ccc";

                }

                ul.appendChild(li);

                li.onclick = function () {

                    if (liSpecSelect) {

                        liSpecSelect.style.backgroundColor = (liSpecSelect.getAttribute("tag") == "odd" ? "#eee" : "");

                    }

                    liSpecSelect = this;

                    this.style.backgroundColor = "lightblue";

                    selectedSample = this.getAttribute("specimen");

                    loadTests(this.getAttribute("specimen"));

                }

            }

        }

        hideSpinner();

    }

    function loadTests(specimen) {

        if (__$("tests")) {

            document.body.removeChild(__$("tests"));

        } else {

            var div = document.createElement("div");
            div.id = "tests";
            div.style.position = "absolute";
            div.style.width = "85%";
            div.style.height = "67%";
            div.style.top = "20%";
            div.style.left = "5%";
            div.style.border = "1px solid #000";
            div.style.overflow = "hidden";
            div.style.backgroundColor = "rgba(255,255,255,0.95)";
            div.style.borderRadius = "10px";
            div.style.fontSize = "20px";
            div.style.padding = "10px";

            document.body.appendChild(div);

            var divChild = document.createElement("div");
            divChild.style.width = "100%";
            divChild.style.height = "100%";
            divChild.style.overflow = "auto";
            // divChild.style.margin = "10px";

            div.appendChild(divChild);

            var btnClose = document.createElement("img");
            btnClose.src = icoClose;
            btnClose.id = "btnClose";
            btnClose.height = "80";
            btnClose.style.position = "absolute";
            btnClose.style.zIndex = 100;
            btnClose.style.right = "2%";
            btnClose.style.top = "15%";
            btnClose.style.cursor = "pointer";

            btnClose.onclick = function () {

                if (__$("tests")) {

                    if (__$("btnClose")) {

                        document.body.removeChild(__$("btnClose"));

                    }

                    if (__$("btnOrder")) {

                        document.body.removeChild(__$("btnOrder"));

                    }

                    document.body.removeChild(__$("tests"));

                    if (liSpecSelect) {

                        liSpecSelect.style.backgroundColor = (liSpecSelect.getAttribute("tag") == "odd" ? "#eee" : "");

                    }
                }

            }

            document.body.appendChild(btnClose);

            var btnOrder = document.createElement("img");
            btnOrder.id = "btnOrder";
            btnOrder.src = icoAdd;
            btnOrder.height = "80";
            btnOrder.style.position = "absolute";
            btnOrder.style.zIndex = 100;
            btnOrder.style.right = "2%";
            btnOrder.style.bottom = "15%";
            btnOrder.style.cursor = "pointer";

            // document.body.appendChild(btnOrder);

            btnOrder.onclick = function () {

                if (selectedTest != null && selectedTestSpecimen != null) {
                    addTest(selectedTest, selectedTestSpecimen);
                }

            }

            var ul = document.createElement("ul");
            ul.id = "ulTests";
            ul.style.listStyle = "none";
            ul.style.paddingLeft = "0px";

            divChild.appendChild(ul);

            var j = 0;

            for (var i = 0; i < associations[specimen].length; i++) {

                var parent = specimen;

                var test = associations[specimen][i];

                var container = containers[parent][test];

                if (selectedTests[parent]) {

                    if (selectedTests[parent][container]) {

                        if (selectedTests[parent][container][associations[specimen][i]]) {

                            continue;

                        }

                    }

                }

                var key = associations[specimen][i];

                if (preSelectedTest.trim().length > 0 && preSelectedTest.trim().toLowerCase() != key.trim().toLowerCase()) {

                    continue;

                }

                var li = document.createElement("li");
                li.innerHTML = key + (preSelectedTest.trim().toLowerCase() == key.trim().toLowerCase() ? "<i style='float: right; color: red;'>(Pre-selected)</i>" : "");
                li.style.padding = "10px";
                li.style.cursor = "pointer";
                li.style.margin = "1px";
                li.setAttribute("test", key);
                li.setAttribute("specimen", specimen);
                li.setAttribute("container", containers[specimen][key]);

                if (j % 2 > 0) {

                    li.style.backgroundColor = "#eee";

                    li.setAttribute("tag", "odd");

                } else {

                    li.style.borderTop = "1px dotted #ccc";

                    li.style.borderBottom = "1px dotted #ccc";

                }

                ul.appendChild(li);

                li.onclick = function () {

                    if (liTestSelect) {

                        liTestSelect.style.backgroundColor = (liTestSelect.getAttribute("tag") == "odd" ? "#eee" : "");

                    }

                    liTestSelect = this;

                    this.style.backgroundColor = "lightblue";

                    selectedTest = this.getAttribute("test");

                    selectedTestSpecimen = this.getAttribute("specimen");

                    // addTest(selectedTest, selectedTestSpecimen);

                    if (__$("tests")) {

                        if (__$("btnClose")) {

                            document.body.removeChild(__$("btnClose"));

                        }

                        if (__$("btnOrder")) {

                            document.body.removeChild(__$("btnOrder"));

                        }

                        document.body.removeChild(__$("tests"));

                        if (liSpecSelect) {

                            liSpecSelect.style.backgroundColor = (liSpecSelect.getAttribute("tag") == "odd" ? "#eee" : "");

                        }
                    }

                    setPriority();

                }

                j++;

            }

        }

    }

    function setPriority() {

        if (!__$("shield")) {

            showShield();

        }

        var popup = document.createElement("div");
        popup.id = "popup";
        popup.style.position = "absolute";
        popup.style.minHeight = "200px";
        popup.style.top = "20%";
        popup.style.width = "330px";
        popup.style.left = ((window.innerWidth - 330) / 2) + "px";
        popup.style.backgroundColor = "#fff";
        popup.style.zIndex = 120;
        popup.style.border = "2px outset #fff";
        popup.style.borderRadius = "8px";

        document.body.appendChild(popup);

        var table = document.createElement("table");
        table.width = "100%";
        table.style.fontSize = "24px";

        popup.appendChild(table);

        var tbody = document.createElement("tbody");

        table.appendChild(tbody);

        var tr1 = document.createElement("tr");

        tbody.appendChild(tr1);

        var th = document.createElement("th");
        th.innerHTML = "Priority: " + selectedTest;
        th.style.backgroundColor = "#345d8c";
        th.style.color = "#fff";
        th.style.borderTopLeftRadius = "8px";
        th.style.borderTopRightRadius = "8px";
        th.style.border = "2px outset #23538a";
        th.colSpan = "2";

        tr1.appendChild(th);

        var tr2 = document.createElement("tr");

        tbody.appendChild(tr2);

        var td1_1 = document.createElement("td");
        td1_1.colSpan = "2";
        td1_1.style.padding = "10px";
        td1_1.style.paddingTop = "20px";
        td1_1.style.paddingBottom = "20px";
        td1_1.align = "center";
        td1_1.innerHTML = "What is the priority level of this test?";

        tr2.appendChild(td1_1);

        var tr3 = document.createElement("tr");

        tbody.appendChild(tr3);

        var td2_1 = document.createElement("td");
        td2_1.align = "center";
        td2_1.style.padding = "20px";

        tr3.appendChild(td2_1);

        var td2_2 = document.createElement("td");
        td2_2.align = "center";
        td2_2.style.padding = "20px";

        tr3.appendChild(td2_2);

        var btnYes = document.createElement("button");
        btnYes.className = "button_red";
        btnYes.innerHTML = "Urgent";
        btnYes.style.width = "120px";
        btnYes.style.cursor = "pointer";

        td2_1.appendChild(btnYes);

        var btnNo = document.createElement("button");
        btnNo.className = "button_green";
        btnNo.innerHTML = "Routine";
        btnNo.style.width = "120px";
        btnNo.style.cursor = "pointer";

        td2_2.appendChild(btnNo);

        btnNo.onclick = function () {

            if (__$("popup")) {

                document.body.removeChild(__$("popup"));

            }

            if (__$("shield")) {

                document.body.removeChild(__$("shield"));

            }

            selectedTestPriority = "R";

            addTest(selectedTest, selectedTestSpecimen, selectedTestPriority);
        }

        btnYes.onclick = function () {

            if (__$("popup")) {

                document.body.removeChild(__$("popup"));

            }

            if (__$("shield")) {

                document.body.removeChild(__$("shield"));

            }

            selectedTestPriority = "S";

            addTest(selectedTest, selectedTestSpecimen, selectedTestPriority);
        }

    }

    function addTest(test, specimen, priority) {

        var parent = specimen;

        if (!selectedTests[parent]) {

            selectedTests[parent] = {}

        }

        var container = containers[parent][test];

        if (!selectedTests[parent][container]) {

            selectedTests[parent][container] = {}

        }

        selectedTests[parent][container][test] = [codes[test], priority];

        if (__$("tests")) {

            selectedTest = null;

            selectedTestSpecimen = null;

            if (__$("btnClose")) {

                document.body.removeChild(__$("btnClose"));

            }

            if (__$("btnOrder")) {

                document.body.removeChild(__$("btnOrder"));

            }

            document.body.removeChild(__$("tests"));

            if (liSpecSelect) {

                liSpecSelect.style.backgroundColor = (liSpecSelect.getAttribute("tag") == "odd" ? "#eee" : "");

            }
        }

        if (__$("selected")) {
            __$("selected").className = "button_blue";

            __$("selected").onclick = function () {
                actOnSelection();
            };
        }

        if (__$("count")) {

            var count = parseInt(__$("count").innerHTML.trim()) + 1;

            __$("count").innerHTML = count;

        }
    }

    function removeTest(test, specimen) {

        var parent = specimen;

        if (!selectedTests[parent]) {

            return;

        }

        var container = containers[parent][test];

        if (!selectedTests[parent][container]) {

            return;

        }

        if (selectedTests[parent][container][test]) {

            delete selectedTests[parent][container][test];

        }

        if (Object.keys(selectedTests[parent][container]).length == 0) {

            delete selectedTests[parent][container];

        }

        if (Object.keys(selectedTests[parent]).length == 0) {

            delete selectedTests[parent];

        }

        var found = false;

        if (Object.keys(selectedTests).length > 0) {

            var items = Object.keys(selectedTests);

            for (var i = 0; i < items.length; i++) {

                if (Object.keys(selectedTests[items[i]]).length > 0) {

                    found = true;

                    break;

                }

            }

        }

        if (!found) {
            if (__$("selected")) {

                __$("selected").className = "button_gray";

                __$("selected").onclick = function () {
                };

            }
        } else {
            if (__$("selected")) {
                __$("selected").className = "button_blue";

                __$("selected").onclick = function () {
                    actOnSelection();
                };
            }
        }

        if (__$("count")) {

            var count = parseInt(__$("count").innerHTML.trim()) - 1;

            if (count < 0)
                count = 0;

            __$("count").innerHTML = count;

        }

        showSelections();
    }

    function actOnSelection() {

        if (!__$("shield")) {

            showShield();

        }

        var popup = document.createElement("div");
        popup.id = "popup";
        popup.style.position = "absolute";
        popup.style.minHeight = "200px";
        popup.style.top = "20%";
        popup.style.width = "330px";
        popup.style.left = ((window.innerWidth - 330) / 2) + "px";
        popup.style.backgroundColor = "#fff";
        popup.style.zIndex = 120;
        popup.style.border = "2px outset #fff";
        popup.style.borderRadius = "8px";

        document.body.appendChild(popup);

        var table = document.createElement("table");
        table.width = "100%";
        table.style.fontSize = "24px";

        popup.appendChild(table);

        var tbody = document.createElement("tbody");

        table.appendChild(tbody);

        var tr1 = document.createElement("tr");

        tbody.appendChild(tr1);

        var th = document.createElement("th");
        th.innerHTML = "Quick Question";
        th.style.backgroundColor = "#345d8c";
        th.style.color = "#fff";
        th.style.borderTopLeftRadius = "8px";
        th.style.borderTopRightRadius = "8px";
        th.style.border = "2px outset #23538a";
        th.colSpan = "2";

        tr1.appendChild(th);

        var tr2 = document.createElement("tr");

        tbody.appendChild(tr2);

        var td1_1 = document.createElement("td");
        td1_1.colSpan = "2";
        td1_1.style.padding = "10px";
        td1_1.style.paddingTop = "20px";
        td1_1.style.paddingBottom = "20px";
        td1_1.align = "center";
        td1_1.innerHTML = "Are you drawing samples now?";

        tr2.appendChild(td1_1);

        var tr3 = document.createElement("tr");

        tbody.appendChild(tr3);

        var td2_1 = document.createElement("td");
        td2_1.align = "center";
        td2_1.style.padding = "20px";

        tr3.appendChild(td2_1);

        var td2_2 = document.createElement("td");
        td2_2.align = "center";
        td2_2.style.padding = "20px";

        tr3.appendChild(td2_2);

        var btnYes = document.createElement("button");
        btnYes.className = "button_green";
        btnYes.innerHTML = "Yes";
        btnYes.style.width = "100px";
        btnYes.style.cursor = "pointer";

        td2_2.appendChild(btnYes);

        var btnNo = document.createElement("button");
        btnNo.className = "button_red";
        btnNo.innerHTML = "No";
        btnNo.style.width = "100px";
        btnNo.style.cursor = "pointer";

        td2_1.appendChild(btnNo);

        btnNo.onclick = function () {

            if (__$("popup")) {

                document.body.removeChild(__$("popup"));

            }

            if (__$("shield")) {

                document.body.removeChild(__$("shield"));

            }

            drawingSamples = false;

            showSelections();
        }

        btnYes.onclick = function () {

            if (__$("popup")) {

                document.body.removeChild(__$("popup"));

            }

            if (__$("shield")) {

                document.body.removeChild(__$("shield"));

            }

            drawingSamples = true;

            showSelections();
        }

    }

    var selectionLocked = false;

    function showSelections() {

        if (__$("tests")) {

            document.body.removeChild(__$("tests"));

        }

        if (__$("btnClose")) {

            document.body.removeChild(__$("btnClose"));

        }

        if (__$("btnOrder")) {

            document.body.removeChild(__$("btnOrder"));

        }

        var div = document.createElement("div");
        div.id = "tests";
        div.style.position = "absolute";
        div.style.width = "85%";
        div.style.height = "67%";
        div.style.top = "20%";
        div.style.left = "5%";
        div.style.border = "1px solid #000";
        div.style.overflow = "hidden";
        div.style.backgroundColor = "rgba(255,255,255,0.98)";
        div.style.borderRadius = "10px";
        div.style.fontSize = "20px";
        div.style.padding = "10px";

        document.body.appendChild(div);

        var divChild = document.createElement("div");
        divChild.style.width = "100%";
        divChild.style.height = "100%";
        divChild.style.overflow = "auto";
        divChild.style.fontSize = "14px";

        div.appendChild(divChild);

        var btnClose = document.createElement("img");
        btnClose.src = icoClose;
        btnClose.id = "btnClose";
        btnClose.height = "80";
        btnClose.style.position = "absolute";
        btnClose.style.zIndex = 100;
        btnClose.style.right = "2%";
        btnClose.style.top = "15%";
        btnClose.style.cursor = "pointer";

        btnClose.onclick = function () {

            currentOrders = {};

            selectedOrder = null;

            if (__$("tests")) {

                if (__$("btnClose")) {

                    document.body.removeChild(__$("btnClose"));

                }

                if (__$("btnOrder")) {

                    document.body.removeChild(__$("btnOrder"));

                }

                document.body.removeChild(__$("tests"));

                if (liSpecSelect) {

                    liSpecSelect.style.backgroundColor = (liSpecSelect.getAttribute("tag") == "odd" ? "#eee" : "");

                }
            }

        }

        document.body.appendChild(btnClose);

        var btnOrder = document.createElement("button");
        btnOrder.id = "btnOrder";
        btnOrder.height = "80";
        btnOrder.style.position = "absolute";
        btnOrder.style.zIndex = 100;
        btnOrder.style.right = "125px";
        btnOrder.style.bottom = "6px";
        btnOrder.style.cursor = "pointer";
        btnOrder.innerHTML = "Order Selected";
        btnOrder.className = "button_gray";

        btnOrder.onclick = function () {

            selectedOrder = null;

            if (Object.keys(currentOrders).length > 0) {

                doOrderTests();

            }

        }

        document.body.appendChild(btnOrder);

        var samples = Object.keys(selectedTests);

        var table = document.createElement("div");
        table.style.display = "table";
        table.style.width = "99%";
        table.style.borderSpacing = "1px";
        table.style.margin = "auto";

        divChild.appendChild(table);

        var rowHeader = document.createElement("div");
        rowHeader.style.display = "table-row";

        table.appendChild(rowHeader);

        var cellh1 = document.createElement("div");
        cellh1.style.display = "table-cell";
        cellh1.style.padding = "8px";
        cellh1.style.verticalAlign = "middle";
        cellh1.style.fontWeight = "bold";
        cellh1.style.backgroundColor = "#ccc";
        cellh1.style.color = "#333";
        cellh1.style.width = "20%";
        cellh1.style.textAlign = "center";
        cellh1.style.borderTopLeftRadius = "10px";

        cellh1.innerHTML = "Specimen";

        rowHeader.appendChild(cellh1);

        var cellh2 = document.createElement("div");
        cellh2.style.display = "table-cell";
        cellh2.style.padding = "8px";
        cellh2.style.verticalAlign = "middle";
        cellh2.style.fontWeight = "bold";
        cellh2.style.backgroundColor = "#ccc";
        cellh2.style.color = "#333";
        cellh2.style.textAlign = "center";

        cellh2.innerHTML = "Tests";

        rowHeader.appendChild(cellh2);

        var cellh4 = document.createElement("div");
        cellh4.style.display = "table-cell";
        cellh4.style.padding = "8px";
        cellh4.style.verticalAlign = "middle";
        cellh4.style.fontWeight = "bold";
        cellh4.style.backgroundColor = "#ccc";
        cellh4.style.color = "#333";
        // cellh4.style.width = "100px";
        cellh4.style.textAlign = "center";

        cellh4.innerHTML = "Vol.";

        rowHeader.appendChild(cellh4);

        var cellh3 = document.createElement("div");
        cellh3.style.display = "table-cell";
        cellh3.style.padding = "8px";
        cellh3.style.verticalAlign = "middle";
        cellh3.style.fontWeight = "bold";
        cellh3.style.backgroundColor = "#ccc";
        cellh3.style.color = "#333";
        cellh3.style.borderTopRightRadius = "10px";
        cellh3.style.textAlign = "center";

        cellh3.innerHTML = "Container";

        rowHeader.appendChild(cellh3);

        var content = document.createElement("div");
        content.style.width = "99%";
        content.style.borderSpacing = "1px";
        content.style.margin = "auto";
        content.style.height = "83%";
        content.style.overflow = "auto";
        content.style.border = "1px solid #ccc";
        content.style.borderBottomRightRadius = "10px";
        content.style.borderBottomLeftRadius = "10px";

        divChild.appendChild(content);

        var contentTable = document.createElement("table");
        contentTable.style.width = "99%";
        contentTable.style.margin = "auto";

        content.appendChild(contentTable);

        var contentTbody = document.createElement("tbody");
        contentTable.appendChild(contentTbody);

        for (var i = 0; i < samples.length; i++) {

            var row = document.createElement("tr");

            contentTbody.appendChild(row);

            var cell1 = document.createElement("td");
            cell1.style.padding = "5px";
            cell1.style.verticalAlign = "top";
            cell1.style.paddingLeft = "20px";
            cell1.style.width = "20%";
            cell1.style.borderRight = "1px dotted #ccc";
            cell1.style.borderBottom = "1px dotted #ccc";
            cell1.style.fontWeight = "bold";
            cell1.style.fontStyle = "italic";

            cell1.innerHTML = samples[i];

            row.appendChild(cell1);

            var containerList = Object.keys(selectedTests[samples[i]]);

            var r = 0;

            for (r = 0; r < containerList.length; r++) {

                var tableRow = row;

                if (r > 0) {
                    tableRow = document.createElement("tr");

                    contentTbody.appendChild(tableRow);
                }

                var cell3 = document.createElement("td");
                cell3.style.padding = "5px";
                cell3.style.verticalAlign = "top";
                cell3.style.borderRight = "1px dotted #ccc";
                cell3.style.borderBottom = "1px dotted #ccc";
                cell3.className = "row" + i + "_" + r;

                tableRow.appendChild(cell3);

                var cell5 = document.createElement("td");
                cell5.style.padding = "5px";
                cell5.style.verticalAlign = "top";
                cell5.style.borderBottom = "1px dotted #ccc";
                cell5.style.borderRight = "1px dotted #ccc";
                cell5.style.width = "105px";
                cell5.style.textAlign = "center";
                cell5.className = "row" + i + "_" + r;

                tableRow.appendChild(cell5);

                var cell4 = document.createElement("td");
                cell4.style.padding = "5px";
                cell4.style.verticalAlign = "top";
                cell4.style.borderRight = "1px dotted #ccc";
                cell4.style.borderBottom = "1px dotted #ccc";
                cell4.style.width = "205px";
                cell4.style.textAlign = "center";
                cell4.className = "row" + i + "_" + r;

                tableRow.appendChild(cell4);

                var cell4Tbl = document.createElement("table");
                cell4Tbl.style.width = "100%";

                cell4.appendChild(cell4Tbl);

                var cell4TblTbody = document.createElement("tbody");

                cell4Tbl.appendChild(cell4TblTbody);

                var tr = document.createElement("tr");

                cell4TblTbody.appendChild(tr);

                var td1 = document.createElement("td");
                td1.style.width = "40px";

                tr.appendChild(td1);

                var td2 = document.createElement("td");
                td2.align = "center";

                tr.appendChild(td2);

                var sampleContainers = containerList[r].split("/");

                for (var s = 0; s < sampleContainers.length; s++) {

                    var containerImg = document.createElement("img");
                    containerImg.setAttribute("src", (containerTypes[sampleContainers[s]] == undefined ? unknown : containerTypes[sampleContainers[s]]));
                    containerImg.height = "100";
                    containerImg.style.margin = "10px";

                    td2.appendChild(containerImg);

                }

                var check = document.createElement("div");
                check.className = "checks";
                check.style.border = "2px solid #000";
                check.style.height = "40px";
                check.style.width = "40px";
                check.style.margin = "auto";
                check.style.backgroundColor = "#fff";
                check.style.cursor = "pointer";
                check.setAttribute("tag", i + "_" + r);
                check.setAttribute("sample", samples[i]);
                check.setAttribute("container", containerList[r]);

                if (drawingSamples) {

                    check.style.borderRadius = "40px";

                }

                td1.appendChild(check);

                check.onclick = function () {

                    // check.onclick = function () {

                    if (drawingSamples) {

                        var checks = document.getElementsByClassName("checks");

                        for (var z = 0; z < checks.length; z++) {

                            if (checks[z].getAttribute("selected") != null) {

                                var tag = checks[z].getAttribute("tag");

                                var controls = document.getElementsByClassName("row" + tag);

                                for (var c = 0; c < controls.length; c++) {

                                    controls[c].style.backgroundColor = "";

                                }

                                var specimen = checks[z].getAttribute("sample");
                                var containerType = checks[z].getAttribute("container");

                                if (currentOrders[specimen]) {

                                    if (currentOrders[specimen][containerType]) {

                                        delete currentOrders[specimen][containerType];

                                    }

                                    if (Object.keys(currentOrders[specimen]).length <= 0) {

                                        delete currentOrders[specimen];

                                    }

                                }

                                checks[z].innerHTML = "";

                                checks[z].removeAttribute("selected");

                            }

                        }

                    }

                    if (this.innerHTML.trim().length == 0) {

                        var img = document.createElement("img");
                        img.setAttribute("src", imgTick);
                        img.height = "55";
                        img.style.marginTop = "-10px";

                        this.appendChild(img);

                    } else {

                        this.innerHTML = "";

                    }

                    var tag = this.getAttribute("tag");

                    var controls = document.getElementsByClassName("row" + tag);

                    var specimen = this.getAttribute("sample");
                    var containerType = this.getAttribute("container");

                    if (this.getAttribute("selected") != null) {

                        for (var c = 0; c < controls.length; c++) {

                            controls[c].style.backgroundColor = "";

                        }

                        if (currentOrders[specimen]) {

                            if (currentOrders[specimen][containerType]) {

                                delete currentOrders[specimen][containerType];

                            }

                            if (Object.keys(currentOrders[specimen]).length <= 0) {

                                delete currentOrders[specimen];

                            }

                        }

                        this.removeAttribute("selected");

                    } else {

                        for (var c = 0; c < controls.length; c++) {

                            controls[c].style.backgroundColor = "lightblue";

                        }

                        if (!currentOrders[specimen]) {

                            currentOrders[specimen] = {};

                        }

                        if (!currentOrders[specimen][containerType]) {

                            currentOrders[specimen][containerType] = true;

                        }

                        this.setAttribute("selected", true);

                    }

                    if (Object.keys(currentOrders).length <= 0) {

                        if (__$("btnOrder")) {

                            __$("btnOrder").className = "button_gray";

                        }

                    } else {

                        if (__$("btnOrder")) {

                            __$("btnOrder").className = "button_blue";

                        }

                    }

                    // }

                }

                var ul = document.createElement("ul");
                ul.id = "ulTests" + samples[i] + "_" + containerList[r];
                ul.style.listStyle = "none";
                ul.style.paddingLeft = "0px";
                ul.style.margin = "0px";

                cell3.appendChild(ul);

                var samplesList = Object.keys(selectedTests[samples[i]][containerList[r]]);

                var total = 0;

                for (var k = 0; k < samplesList.length; k++) {

                    var key = samplesList[k];

                    if (volumes[samples[i]][key] != "N/A") {

                        total += parseInt(volumes[samples[i]][key]);

                        cell5.innerHTML = total + " " + units[samples[i]][key];

                    }

                    var li = document.createElement("li");
                    // li.innerHTML = key /*(shortnames[key] != null && String(shortnames[key]).trim().length > 0 ? shortnames[key] : key)*/ +
                    //        (units[samples[i]][key] != "N/A" ? " <i>(" + volumes[samples[i]][key] + " " + units[samples[i]][key] + ")</i>" : "");
                    li.style.padding = "10px";
                    li.style.cursor = "pointer";
                    li.style.margin = "1px";
                    li.setAttribute("test", key);
                    li.setAttribute("specimen", samples[i]);

                    if (k % 2 > 0) {

                        li.style.backgroundColor = "#eee";

                        li.setAttribute("tag", "odd");

                    } else {

                        li.style.backgroundColor = "#fff";

                    }

                    ul.appendChild(li);

                    var liTbl = document.createElement("table");
                    liTbl.style.width = "100%";

                    li.appendChild(liTbl);

                    var liTblTbody = document.createElement("tbody");

                    liTbl.appendChild(liTblTbody);

                    var liTr = document.createElement("tr");

                    liTblTbody.appendChild(liTr);

                    var liTd1 = document.createElement("td");
                    liTd1.innerHTML = key + (units[samples[i]][key] != "N/A" ? " <i>(" + volumes[samples[i]][key] + " " + units[samples[i]][key] + ")</i>" : "");

                    liTr.appendChild(liTd1);

                    var liTd2 = document.createElement("td");
                    liTd2.style.width = "20px";

                    liTr.appendChild(liTd2);

                    var imgDel = document.createElement("img");
                    imgDel.setAttribute("src", icoClose);
                    imgDel.height = "20";

                    liTd2.appendChild(imgDel);

                    li.onclick = function () {

                        if (liTestSelect) {

                            liTestSelect.style.backgroundColor = (liTestSelect.getAttribute("tag") == "odd" ? "#eee" : "#fff");

                        }

                        liTestSelect = this;

                        this.style.backgroundColor = "lightblue";

                        selectedTest = this.getAttribute("test");

                        selectedTestSpecimen = this.getAttribute("specimen");

                        if (typeof(Android) != "undefined") {

                            Android.confirmAction("Do you really want to remove the selected test?", "removeTest('" +
                                    selectedTest + "', '" + selectedTestSpecimen + "')");

                        } else {

                            if (confirm("Do you really want to remove the selected test?")) {

                                removeTest(selectedTest, selectedTestSpecimen);

                            }

                        }

                        if (liTestSelect) {

                            liTestSelect.style.backgroundColor = (liTestSelect.getAttribute("tag") == "odd" ? "#eee" : "#fff");

                        }

                    }

                }
            }

            cell1.setAttribute("rowspan", r);

        }

        if (Object.keys(currentOrders).length <= 0) {

            if (__$("btnOrder")) {

                __$("btnOrder").className = "button_gray";

            }

        } else {

            if (__$("btnOrder")) {

                __$("btnOrder").className = "button_blue";

            }

        }

    }

    function doOrderTests() {

        showSpinner();

        var keys = Object.keys(currentOrders);

        for (var i = 0; i < keys.length; i++) {

            var containerTypes = Object.keys(currentOrders[keys[i]]);

            for (var j = 0; j < containerTypes.length; j++) {

                selectedOrderTests = [];

                var tests = Object.keys(selectedTests[keys[i]][containerTypes[j]]);

                for (var k = 0; k < tests.length; k++) {

                    selectedOrderTests.push(tests[k]);

                    currentPriority = selectedTests[keys[i]][containerTypes[j]][tests[k]][1];

                    delete selectedTests[keys[i]][containerTypes[j]][tests[k]];

                    if (Object.keys(selectedTests[keys[i]][containerTypes[j]]).length == 0) {

                        delete selectedTests[keys[i]][containerTypes[j]];

                    }

                    if (Object.keys(selectedTests[keys[i]]).length == 0) {

                        delete selectedTests[keys[i]];

                    }

                    if (currentOrders[keys[i]] && currentOrders[keys[i]][containerTypes[j]]) {

                        delete currentOrders[keys[i]][containerTypes[j]];

                    }

                    if (currentOrders[keys[i]] && Object.keys(currentOrders[keys[i]]).length == 0) {

                        delete currentOrders[keys[i]];

                    }

                    if (__$("count")) {

                        var count = parseInt(__$("count").innerHTML.trim()) - 1;

                        if (count < 0)
                            count = 0;

                        __$("count").innerHTML = count;

                    }

                }

                selectedSample = keys[i];

                processOrder(j, k);

                showSelections();

            }

        }

        var found = false;

        if (Object.keys(selectedTests).length > 0) {

            var items = Object.keys(selectedTests);

            for (var i = 0; i < items.length; i++) {

                if (Object.keys(selectedTests[items[i]]).length > 0) {

                    found = true;

                    break;

                }

            }

        }

        if (!found) {
            if (__$("selected")) {

                __$("selected").className = "button_gray";

                __$("selected").onclick = function () {
                };

            }
        } else {
            if (__$("selected")) {
                __$("selected").className = "button_blue";

                __$("selected").onclick = function () {
                    actOnSelection();
                };
            }
        }

    }

    var linedUp = {};

    function processOrder(j, k) {
        <!--
        /*
        [{:national_id=>"P129500000229", :full_name=>"Mevis Kadammanja", :sex=>"Female", :age=>"51",
        :date_of_birth=>"27/Oct/1963", :first_name=>"Mevis", :last_name=>"Kadammanja", :middle_name=>"N/A",
        :home_village=>nil, :home_ta=>"TA Malengachanzi", :home_district=>"Nkhotakota ", :current_village=>"Area 25a Houses",
        :current_ta=>nil, :current_district=>nil, :current_residence=>"Nsungwi market"}]
        */
        -->

        linedUp[[j, k]] = true;

        var test_code = "";     // codes[selectedTest];

        var test_name = "";     // selectedTest;

        for (var i = 0; i < selectedOrderTests.length; i++) {

            test_name += selectedOrderTests[i].replace(/\&/g, "and") + "|" + codes[selectedOrderTests[i]] + "|" +
                    currentPriority + ",";

        }

        var specimen_code = codes["specimens"][selectedSample];

        var specimen = selectedSample;

        var npid = "<%= @patient[:national_id] rescue nil %>";

        var first_name = "<%= @patient[:first_name] rescue nil %>";

        var last_name = "<%= @patient[:last_name] rescue nil %>";

        var middle_name = "<%= @patient[:middle_name] rescue nil %>";

        var sex = "<%= @patient[:sex] rescue nil %>";

        var date_of_birth = "<%= @patient[:date_of_birth].to_date.strftime("%Y%m%d") rescue nil %>";

        var status = (drawingSamples ? "Drawn" : "Ordered");

        if (preSelectedTest.trim().length > 0) {

            status = preSelectedState;

        }

        var aux = "&old_test_name=" + preSelectedTest + "&old_test_code=" + preSelectedTestCode + "&old_specimen_id=" +
                preSelectAccessionNumber + "&old_specimen=" + preSelectedSpecimen;

        var url = "/process_order?npid=" + npid +
                "&test_name=" + (test_name == "" ? "" : encodeURI(test_name)) +
                "&specimen_code=" + (specimen_code == null ? specimen : specimen_code) +
                "&specimen=" + (specimen == null ? "" : specimen) +
                "&first_name=" + (first_name == null ? "" : first_name) +
                "&last_name=" + (last_name == null ? "" : last_name) +
                "&middle_name=" + (middle_name == null ? "" : middle_name) +
                "&date_of_birth=" + (date_of_birth == null ? "" : date_of_birth) +
                "&sex=" + (sex == null ? "" : sex) + "&status=" + status + (preSelectedTest.trim().length > 0 ? aux : "");

        var httpRequest = new XMLHttpRequest();

        httpRequest.onreadystatechange = function () {
            handleResponse(httpRequest, j, k);
        };

        try {
            httpRequest.open('GET', url,

                    true);
            httpRequest.send(null);
        } catch (e) {
        }

        /*if (__$("tests") && false) {

         if(__$("btnClose")){

         document.body.removeChild(__$("btnClose"));

         }

         if(__$("btnOrder")){

         document.body.removeChild(__$("btnOrder"));

         }

         document.body.removeChild(__$("tests"));

         if (liSpecSelect) {

         liSpecSelect.style.backgroundColor = (liSpecSelect.getAttribute("tag") == "odd" ? "#eee" : "");

         }
         }*/

    }


    function handleResponse(aXMLHttpRequest, j, k) {
        if (!aXMLHttpRequest) return;

        if (aXMLHttpRequest.readyState == 4 && (aXMLHttpRequest.status == 200 ||
                aXMLHttpRequest.status == 304)) {

            var result = JSON.parse(aXMLHttpRequest.responseText);

            /*

             {
             "sendingFacility": "KCH",
             "receivingFacility": "KCH",
             "messageDatetime": "20150222215009",
             "messageType": "OML_O21",
             "messageControlID": "20150222215009",
             "processingID": "T",
             "hl7VersionID": "2.5",
             "tests": [
             {
             "obrSetID": "1",
             "testCode": "5909-7",
             "testName": "Blood films",
             "timestampForSpecimenCollection": "20150222215009",
             "reasonTestPerformed": "Rule out diagnosis",
             "whoOrderedTest": "Chris Moyo (1)"
             },
             {
             "obrSetID": "2",
             "testCode": "65758-5",
             "testName": "CD4",
             "timestampForSpecimenCollection": "20150222215009",
             "reasonTestPerformed": "Rule out diagnosis",
             "whoOrderedTest": "Chris Moyo (2)"
             },
             {
             "obrSetID": "3",
             "testCode": "4537-7",
             "testName": "Erythrocyte sedimentation rate",
             "timestampForSpecimenCollection": "20150222215009",
             "reasonTestPerformed": "Rule out diagnosis",
             "whoOrderedTest": "Chris Moyo (3)"
             },
             {
             "obrSetID": "4",
             "testCode": "57021-8",
             "testName": "Full blood count",
             "timestampForSpecimenCollection": "20150222215009",
             "reasonTestPerformed": "Rule out diagnosis",
             "whoOrderedTest": "Chris Moyo (4)"
             }
             ],
             "healthFacilitySiteCodeAndName": "KCH",
             "pidSetID": "1",
             "nationalID": "P170000000031",
             "patientName": "Test N\/A Patient ",
             "dateOfBirth": "19930701",
             "gender": "F",
             "spmSetID": "1",
             "accessionNumber": "KCH3",
             "typeOfSample": "Whole blood",
             "tq1SetID": "1",
             "priority": "S",
             "enteredBy": "User Super (1)",
             "enterersLocation": ""
             }

             */

            var npid = "<%= @patient[:national_id] rescue nil %>";

            var currentTests = "";

            var tests = result[
                    "tests"];

            for (var i = 0; i < tests.length; i++) {

                var short = shortnames[

                        tests[i]["testName"]];

                if (short ==

                        undefined || short.trim().length == 0) {

                    short =

                            tests[i]["testName"];

                }

                currentTests += short + ";"

            }

            if (

                    currentTests.trim().length > 12) {

                currentTests = currentTests.substr(0, 12) + "...";

            }

            if (drawingSamples && preSelectedTest.trim().length == 0) {

                printBarcode(npid, formatTimestamp(result["messageDatetime"]), currentTests, result["accessionNumber"]);

                hideSpinner();

            }

            selectedOrderTests = [];

            selectedSample = null;

            delete linedUp[[j, k]];

            if (Object.keys(linedUp).length == 0) {

                hideSpinner();

            }

        }
    }

    function padZeros(number, positions) {
        var zeros = parseInt(positions) - String(number).length;
        var padded = "";

        for (var i = 0; i < zeros; i++) {
            padded += "0";
        }

        padded += String(number);

        return padded;
    }

    function formatTimestamp(timestamp){
        var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        var datetime = timestamp.trim();
        var year = eval(datetime.substr(0, 4));
        var month = eval(datetime.substr(4, 2)) - 1;
        var day = eval(datetime.substr(6, 2));
        var hour = eval(datetime.substr(8, 2));
        var minute = eval(datetime.substr(10, 2));
        var second = eval(datetime.substr(12, 2));
        var theDate = new Date(year, month, day, hour, minute, second);
        var date = day + "/" + months[month] + "/" + year + " " + padZeros(hour, 2) + ":" + padZeros(minute, 2);

        return date;
    }

    function printBarcode(npid, messageDatetime, testsTBD, accessionNumber, ward) {

        if (ward == undefined) {

            ward = "";

        }

        var full_name = "<%= @patient[:full_name] rescue nil %>";

        // printBarcode(String name, String npid, String datetime, String ward, String test, String barcode)
        if (typeof(Android) != "undefined") {

            Android.printBarcode(full_name, npid, messageDatetime, ward, testsTBD, accessionNumber);

        } else {

            alert("Accession Number: " + accessionNumber);

        }

    }

    setTimeout(function(){renameBtn()}, 100);

    ajaxTasks();

</script>
