<%= form_tag("/check_sample_state", :method => :post) do -%>

    <%

       age = nil

       dob = @patient[:date_of_birth].to_date rescue nil

       if !dob.blank?

         days = (Date.today - dob).to_i

         if days < 30 # days

           age = "#{days} days"

         elsif days >= 30 and days <= 90 # weeks

           age = "#{days / 7} weeks"

         elsif days > 90 and days <= 720 # months

           age = "#{days / 30} months"

         else # years

           age = "#{days / 365}"

         end

       end

    %>

    <table style="margin: auto; margin-top: -5px;" cellpadding="0" width="80%">
      <tr>
        <td style="color: #23538a; font-size: 18px; font-weight: bold;" align="right">
          N<span style="font-size: 14px;">AME</span>
        </td>
        <td style="color: #23538a;">
          :
        </td>
        <td colspan="4">
          <%= @patient[:full_name] rescue nil %>
        </td>
      </tr>
      <tr>
        <td style="color: #23538a; font-size: 18px; font-weight: bold;" align="right">
          N<span style="font-size: 14px;">ATIONAL ID</span>
        </td>
        <td style="color: #23538a;">
          :
        </td>
        <td colspan="4">
          <%= @patient[:national_id] rescue nil %>
        </td>
      </tr>
      <tr>
        <td style="color: #23538a; font-size: 18px; font-weight: bold;" align="right">
          G<span style="font-size: 14px;">ENDER</span>
        </td>
        <td style="color: #23538a;">
          :
        </td>
        <td>
          <%= @patient[:sex] rescue nil %>
        </td>
        <td style="color: #23538a; font-size: 18px; font-weight: bold;" align="right">
          A<span style="font-size: 14px;">GE</span>
        </td>
        <td style="color: #23538a;">
          :
        </td>
        <td>
          <%= age %> <i>(<%= @patient[:date_of_birth] rescue nil %>)</i>
        </td>
      </tr>
      <tr>
        <td style="color: #23538a; font-size: 18px; font-weight: bold;" align="right">
          A<span style="font-size: 14px;">DDRESS</span>
        </td>
        <td style="color: #23538a;">
          :
        </td>
        <td colspan="4">
          <%= @patient[:current_residence] rescue nil %><%= !@patient[:current_village].blank? ? ", " : "" %>
          <%= @patient[:current_village] rescue nil %><%= !@patient[:current_ta].blank? ? ", " : "" %>
          <%= @patient[:current_ta] rescue nil %><%= !@patient[:current_district].blank? ? ", " : "" %>
          <%= @patient[:current_district] rescue nil %>
        </td>
      </tr>
      <tr>
        <th colspan="6" align="left" style="background-color: #23538a; color: #fff; padding: 10px; font-size: 18px;">
          Select test from the following to work with:
        </th>
      </tr>
      <tr>
        <td colspan="6" style="padding: 5px; padding-left: 1px;">

          <div style="height: 200px; border: 1px solid #23538a; width: 100%; padding: 1px; overflow: auto;">

            <ul style="list-style: none; padding-left: 0px; margin: 0px;">

              <% i = 0 %>
              <% @tests.each do |key, value| %>

                  <% code, specimen, status = value.strip.split("|") %>

                  <% if !status.blank? and status.strip.downcase.match(/rejected/) %>

                      <li style="padding: 15px; border: 1px dotted #ccc; color: red; font-weight: normal; font-style: italic;
                              background-color: <%= i % 2 > 0 ? "#eee" : "#fff" %>"
                          tag="<%= i % 2 > 0 ? "odd" : "even" %>" test_name="<%= key %>" test_code="<%= code %>" specimen="<%= specimen %>">
                        <%= key %>
                      </li>

                  <% else %>

                      <li style="padding: 15px; border: 1px dotted #ccc; cursor: pointer; background-color: <%= i % 2 > 0 ? "#eee" : "#fff" %>"
                          tag="<%= i % 2 > 0 ? "odd" : "even" %>" onmouseover="if(this.getAttribute('selected') == null){ this.style.backgroundColor = '#f89e62';}"
                          onmouseout="if(this.getAttribute('selected') == null){ <%= i % 2 > 0 ? "this.style.backgroundColor = '#eee';" : "this.style.backgroundColor = '#fff';" %>}"
                          test_name="<%= key %>" test_code="<%= code %>" specimen="<%= specimen %>" onclick="process(this);">
                        <%= key %>
                      </li>

                  <% end %>

                  <% i += 1 %>

              <% end %>

            </ul>

          </div>

        </td>
      </tr>

    </table>

    <input type="hidden" id="test_name" name="test_name" value=""/>

    <input type="hidden" id="test_code" name="test_code" value=""/>

    <input type="hidden" id="specimen" name="specimen" value=""/>

    <input type="hidden" id="state" name="state" value=""/>

    <input type="hidden" id="barcode" name="barcode" value="<%= @barcode rescue nil %>"/>

    <input type="hidden" id="location" name="location" value="<%= @location[:dept] rescue nil %>"/>

<% end %>

<table style="margin: auto; margin-top: 15px;" cellpadding="0" width="80%">
  <tr>
    <td align="center">
      <button id="btnReject" class="button_gray" style="float: right; margin-right: 10px;">Reject Test</button>
      <button id="btnProcess" class="button_gray" style="float: right; margin-right: 10px;">Start Test</button>
    </td>
  </tr>
</table>

<script>

    var selected;

    var codes = <%= @codes.to_json.html_safe %>;

    function __$(id) {
        return document.getElementById(id);
    }

    function process(control) {

        if (!control) {
            return;
        }

        if (selected) {
            if (selected.getAttribute('tag') == 'odd') {
                selected.style.backgroundColor = '#eee';
            } else {
                selected.style.backgroundColor = '#fff';
            }
            selected.removeAttribute('selected');
        }

        selected = control;

        selected.setAttribute('selected', true);

        selected.style.backgroundColor = 'lightblue';

        checkTestState("<%= @barcode rescue nil %>", control.getAttribute('test_name'), control);

    }

    function checkTestState(barcode, test_name, control) {

        var url = "/check_test_state?barcode=" + barcode + "&test_name=" + test_name;

        var httpRequest = new XMLHttpRequest();

        httpRequest.onreadystatechange = function () {

            if (httpRequest.readyState == 4 && (httpRequest.status == 200 ||
                    httpRequest.status == 304)) {

                var result = httpRequest.responseText;

                if (__$("btnReject")) {

                    if (result.trim().toLowerCase() == "verified") {

                        __$("btnReject").innerHTML = "Dispose Sample";

                        __$("btnReject").className = "button_gray";

                        __$("btnReject").onclick = function () {
                        };

                    } else {

                        __$("btnReject").innerHTML = "Reject Test";

                        __$("btnReject").className = "button_blue";

                        __$("btnReject").onclick = function () {

                            __$('test_name').value = control.getAttribute('test_name');

                            __$('test_code').value = control.getAttribute('test_code');

                            __$('specimen').value = control.getAttribute('specimen');

                            __$('state').value = "TEST REJECTED";

                            document.forms[0].action = "/rejection_reason";

                            confirmAction("Do you really want to reject the selected test?", "showSpinner(); document.forms[0].submit()");

                        }
                    }

                }

                if (__$("btnProcess")) {

                    __$("btnProcess").className = "button_green";

                    if (result.trim().toLowerCase() == "unknown") {

                        __$("btnProcess").innerHTML = "Start Test";

                        __$("btnProcess").onclick = function () {

                            showSpinner();

                            __$('test_name').value = control.getAttribute('test_name');

                            __$('test_code').value = control.getAttribute('test_code');

                            __$('specimen').value = control.getAttribute('specimen');

                            __$('state').value = "TESTING";

                            document.forms[0].method = "post";

                            document.forms[0].submit();

                        }

                    } else if (result.trim().toLowerCase() == "testing") {

                        __$("btnProcess").innerHTML = "Enter Result";

                        __$("btnProcess").onclick = function () {

                            showSpinner();

                            __$('test_name').value = control.getAttribute('test_name');

                            __$('test_code').value = control.getAttribute('test_code');

                            __$('specimen').value = control.getAttribute('specimen');

                            __$('state').value = "TESTED";

                            document.forms[0].method = "get";

                            document.forms[0].action = "/enter_results/<%= @barcode rescue nil %>?test_name=" +
                                    control.getAttribute('test_name') + "&test_code=" + control.getAttribute('test_code') +
                                    "&state=" + "TESTED";

                            document.forms[0].submit();

                        }

                    } else if (result.trim().toLowerCase() == "tested") {

                        <% if @user_details['canverify'].to_s == 'true'%>

                        __$("btnProcess").innerHTML = "Confirm Result";

                        <% else %>

                        __$("btnProcess").innerHTML = "Edit Result";

                        <% end %>

                        __$("btnProcess").onclick = function () {

                            showSpinner();

                            __$('test_name').value = control.getAttribute('test_name');

                            __$('test_code').value = control.getAttribute('test_code');

                            __$('specimen').value = control.getAttribute('specimen');

                            __$('state').value = "VERIFIED";

                            document.forms[0].method = "get";

                            document.forms[0].action = "/enter_results/<%= @barcode rescue nil %>?test_name=" +
                                    control.getAttribute('test_name') + "&test_code=" + control.getAttribute('test_code') +
                                    "&state=" + "VERIFIED";

                            document.forms[0].submit();

                        }

                    } else if (result.trim().toLowerCase() == "verified") {

                        __$("btnProcess").innerHTML = "Verified";

                        __$("btnProcess").className = "button_blue";

                        var npid = "<%= @patient[:national_id] rescue nil %>";

                        var acc_num = "<%= @barcode rescue nil %>";

                        __$("btnProcess").setAttribute("state", "");
                        __$("btnProcess").setAttribute("accession_number", "");
                        __$("btnProcess").setAttribute("test_code", "");
                        __$("btnProcess").setAttribute("test_name", "");
                        __$("btnProcess").setAttribute("result", "");
                        __$("btnProcess").setAttribute("specimen", "");
                        __$("btnProcess").setAttribute("entered_by", "");
                        __$("btnProcess").setAttribute("result_date_time", "");
                        __$("btnProcess").setAttribute("who_ordered_test", "");
                        __$("btnProcess").setAttribute("date_time", "");
                        __$("btnProcess").setAttribute("location_entered", "");
                        __$("btnProcess").setAttribute("remark", "");
                        __$("btnProcess").setAttribute("patient", "");

                        ajaxTasks(npid, acc_num);

                        __$("btnProcess").onclick = function () {

                            selectTestToShow("<%= @barcode rescue nil %>");

                        }

                    } else {

                        __$("btnProcess").className = "button_gray";

                    }

                }

            }

        };
        try {
            httpRequest.open('GET', url, true);
            httpRequest.send(null);
        } catch (e) {
        }

    }

    function checkButton() {
        if (__$("btnNext") && __$("nav")) {

            __$("btnNext").style.display = "none";

            if (__$("btnProcess")) {

                __$("nav").appendChild(__$("btnProcess"));

            }

            if (__$("btnReject")) {

                __$("nav").appendChild(__$("btnReject"));

            }

            if (__$('btnLogout')) {

                __$('btnLogout').innerHTML = "Cancel";

                __$('btnLogout').onmousedown = function () {

                    showSpinner();

                    window.location = "/lab/"
                }

            }

        } else {

            setTimeout(function () {
                checkButton()
            }, 100);

        }
    }

    function ajaxTasks(npid) {

        var url = "/get_labs_from_lab/" + npid;

        showSmallSpinner();

        var httpRequest = new XMLHttpRequest();
        httpRequest.onreadystatechange = function () {
            handleTasks(httpRequest);
        };
        try {
            httpRequest.open('GET', url, true);
            httpRequest.send(null);
        } catch (e) {
        }
    }

    function handleTasks(aXMLHttpRequest) {
        if (!aXMLHttpRequest) return;

        if (aXMLHttpRequest.readyState == 4 && (aXMLHttpRequest.status == 200 ||
                aXMLHttpRequest.status == 304)) {

            results = JSON.parse(aXMLHttpRequest.responseText);

            hideSmallSpinner();

        }
    }

    function showTestStatus(accum_num, test_code) {

        if (results.length > 0) {

            var key = accum_num;

            var kid = test_code;

            var result = results[0]["orders"];

            var attributes = {};

            attributes.state = result[key]["results" ][kid]["status"];
            attributes.accession_number = key;
            attributes.test_name = result[key]["results"][kid]["test_name"];
            attributes.result = result[key]["results"][kid]["result"];
            attributes.specimen = result[key]["sample_type"];
            attributes.entered_by = result[key]["results"][kid]["entered_by"];
            attributes.result_date_time = formatTimestamp(result[key]["results"][kid]["result_date_time"]);
            attributes.who_ordered_test = result[key]["who_ordered_test"];
            attributes.date_time = formatTimestamp(result[key]["date_time"]);
            attributes.location_entered = result[key]["results"][kid]["location_entered"];
            attributes.remark = result[key]["results"][kid]["remark"];
            attributes.patient = results[0]["patient"]["patient_name"];


            var fields = ["specimen", "test_name", "state", "result", "remark", "who_ordered_test",
                "date_time", "entered_by", "result_date_time"];

            var fieldLabels = {
                "specimen": "Sample Type",
                "test_name": "Test Name",
                "state": "Test Status",
                "who_ordered_test": "Ordered By",
                "date_time": "Order Time",
                "result": "Test Result",
                "remark": "Remark",
                "entered_by": "Tested By",
                "result_date_time": "Result Time"
            };

            var tbl = document.createElement("table");
            tbl.cellPadding = "5";
            tbl.cellSpacing = "1";

            var tbdy = document.createElement("tbody");

            tbl.appendChild(tbdy);

            for (var f = 0; f < fields.length; f++) {

                var trf = document.createElement("tr");

                tbdy.appendChild(trf);

                var tdf1 = document.createElement("td");
                tdf1.style.fontWeight = "bold";
                tdf1.style.textAlign = "right";
                tdf1.style.verticalAlign = "top";
                tdf1.style.fontSize = "12px";
                tdf1.style.width = "80px";
                tdf1.style.borderRight = "1px dotted #ccc";

                if (f < fields.length - 1) {

                    tdf1.style.borderBottom = "1px dotted #ccc";

                }

                tdf1.innerHTML = fieldLabels[fields[f]] + ":";

                trf.appendChild(tdf1);

                var tdf2 = document.createElement("td");
                tdf2.style.backgroundColor = "#fff";
                tdf2.style.fontSize = "14px";
                tdf2.style.verticalAlign = "top";

                tdf2.innerHTML = (fields[f] != undefined && attributes[fields[f]] != undefined &&
                        typeof(attributes[fields[f]]).trim().toLowerCase() != "undefined" &&
                        attributes[fields[f]].trim().toLowerCase() != "null" ?
                        attributes[fields[f]] : "&nbsp;");

                if (f < fields.length - 1) {

                    tdf2.style.borderBottom = "1px dotted #ccc";

                }

                trf.appendChild(tdf2);

            }

            showMsgForAction(tbl.outerHTML, attributes["accession_number"].trim() + " : " + attributes["patient"].trim());

        }

    }

    function selectTestToShow(key){

        showShield(true);

        var popup = document.createElement("div");
        popup.id = "popup";
        popup.style.position = "absolute";
        popup.style.minHeight = "150px";
        popup.style.backgroundColor = "#fff";
        popup.style.zIndex = 120;
        popup.style.border = "2px outset #eee";
        popup.style.borderRadius = "8px";

        document.body.appendChild(popup);

        var table = document.createElement("table");
        table.width = "100%";
        table.style.fontSize = "24px";

        popup.appendChild(table);

        var tbody = document.createElement("tbody");

        table.appendChild(tbody);

        var tr1 = document.createElement("tr");

        tbody.appendChild(tr1);

        var th = document.createElement("th");
        th.innerHTML = "Select Test To View";
        th.style.backgroundColor = "#345d8c";
        th.style.color = "#fff";
        th.style.borderTopLeftRadius = "8px";
        th.style.borderTopRightRadius = "8px";
        th.style.border = "2px outset #23538a";
        th.colSpan = "2";
        th.style.padding = "5px";

        tr1.appendChild(th);

        var tr2 = document.createElement("tr");

        tbody.appendChild(tr2);

        var td1_1 = document.createElement("td");
        td1_1.colSpan = "2";
        td1_1.style.padding = "5px";
        td1_1.align = "center";
        td1_1.style.lineHeight = "120%";
        td1_1.style.fontSize = "20px";
        td1_1.style.textAlign = "left";

        tr2.appendChild(td1_1);

        td1_1.innerHTML = "";

        var tr3 = document.createElement("tr");

        // tbody.appendChild(tr3);

        var td2_2 = document.createElement("td");
        td2_2.align = "center";
        td2_2.style.padding = "10px";
        td2_2.setAttribute("colspan", 2);

        // tr3.appendChild(td2_2);

        if(results.length > 0){

            var ul = document.createElement("ul");
            ul.style.listStyle = "none";
            ul.style.padding = "0px";
            ul.style.margin = "0px";

            td1_1.appendChild(ul);

            var keys = Object.keys(results[0]["orders"][key]["results"]);

            for(var u = 0; u < keys.length; u++){

                var li = document.createElement("li");
                li.style.padding = "10px";
                li.style.backgroundColor = (u % 2 > 0 ? "#eee" : "#fff");
                li.style.cursor = "pointer";
                li.innerHTML = "<b>" + keys[u] + "</b>" + ": " + results[0]["orders"][key]["results"][keys[u]]["test_name"];
                li.setAttribute("test_code", keys[u]);
                li.setAttribute("accum_num", key);

                li.onmousedown = function(){

                    this.style.backgroundColor = "lightblue";

                    var accum_num = this.getAttribute("accum_num");

                    var test_code = this.getAttribute("test_code");

                    showTestStatus(accum_num, test_code);

                }

                ul.appendChild(li);

            }

        }

        if (__$("popup")) {

            var c = checkCtrl(__$("popup"));

            __$("popup").style.top = ((window.innerHeight / 2) - (c[1] / 2)) + "px";

            __$("popup").style.left = ((window.innerWidth / 2) - (c[0] / 2)) + "px";

        }

    }

    setTimeout(function () {
        checkButton()
    }, 100);

</script>
